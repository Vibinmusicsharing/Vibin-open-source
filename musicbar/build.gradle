apply plugin: 'com.android.library'
//apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

ext {
    bintrayRepo = 'maven'
    bintrayName = 'MusicBar'

    publishedGroupId = 'com.oze.music'
    libraryName = 'MusicBar'
    artifact = 'MusicBar'

    libraryDescription = 'android lib create music bar like soundcloud'

    siteUrl = 'https://github.com/emadabdalrahman/MusicBar'
    gitUrl = 'https://github.com/emadabdalrahman/MusicBar.git'
    issueUrl = 'https://github.com/emadabdalrahman/MusicBar/issues'

    libraryVersion = '1.0.5'

    developerId = 'emad'
    developerName = 'emad'
    developerEmail = 'emadabdalrahman11@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

android {

    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName libraryVersion

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}


publishing {
    publications {
        Production(MavenPublication) {
            artifact("$buildDir/outputs/aar/musicbar-release.aar")
            groupId publishedGroupId
            artifactId artifact
            version libraryVersion

            //The publication doesn't know about our dependencies, so we have to manually add them to the pom
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.compile.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }
//        Sandbox(MavenPublication) {
//            artifact("$buildDir/outputs/aar/musicbar-release.aar")
//            groupId publishedGroupId
//            artifactId artifact
//            version libraryVersion + '-SANDBOX'
//
//            //The publication doesn't know about our dependencies, so we have to manually add them to the pom
//            pom.withXml {
//                def dependenciesNode = asNode().appendNode('dependencies')
//
//                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
//                configurations.compile.allDependencies.each {
//                    def dependencyNode = dependenciesNode.appendNode('dependency')
//                    dependencyNode.appendNode('groupId', it.group)
//                    dependencyNode.appendNode('artifactId', it.name)
//                    dependencyNode.appendNode('version', it.version)
//                }
//            }
//        }
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName

        websiteUrl = siteUrl
        vcsUrl = gitUrl
        issueTrackerUrl = issueUrl
        licenses = allLicenses
        publish = true
        override = false
        version {
            name = libraryVersion
            desc = libraryDescription
            released = new Date()
            vcsTag = libraryVersion
        }
//        publications = ['Production', 'Sandbox']
        publications = ['Production']

    }
}